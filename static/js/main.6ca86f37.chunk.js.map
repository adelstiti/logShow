{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","SearchBar","searchLog","text","useRef","style","marginBottom","background","className","id","placeholder","ref","onChange","e","current","value","htmlFor","prototypes","PropTypes","func","isRequired","connect","dispatch","a","fetch","process","API_URL","res","json","data","payload","response","statusText","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","checked","newLog","Date","updateLog","setLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ca86f37.chunk.js","sourcesContent":["import { GET_LOGS,SET_LOADING,\r\n    LOGS_ERROR,ADD_LOG,DELETE_LOG\r\n    ,SET_CURRENT,CLEAR_CURRENT,\r\n    UPDATE_LOG,SEARCH_LOGS} from './types';\r\n\r\n// export const getLogs = () => {\r\n//     return async (dispatch) => {\r\n//         setLoading();\r\n\r\n//         const res = await fetch('/logs');\r\n//         const data = await res.json();\r\n\r\n//         dispatch({\r\n//             type: GET_LOGS,\r\n//             payload : data\r\n//         });\r\n//     }\r\n// }\r\n\r\n\r\n// Get Logs from Server\r\nexport const getLogs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`${process.env.API_URL}/logs`);\r\n        const data = await res.json();\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload : data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:LOGS_ERROR,\r\n            payload : err.response.statusText\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// Add log \r\nexport const addLog = (log) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`${process.env.API_URL}/logs`,{\r\n            method : 'POST',\r\n            body : JSON.stringify(log),\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await res.json();\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload : data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:LOGS_ERROR,\r\n            payload : err.response.statusText\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// Delete log \r\nexport const deleteLog = id => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`${process.env.API_URL}/logs/${id}`,{\r\n            method : 'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload : id\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:LOGS_ERROR,\r\n            payload : err.response.statusText\r\n        })\r\n    }\r\n}\r\n\r\n// Update log \r\nexport const updateLog = log => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`${process.env.API_URL}/logs/${log.id}`,{\r\n            method : 'PUT',\r\n            body : JSON.stringify(log),\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: UPDATE_LOG,\r\n            payload : data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:LOGS_ERROR,\r\n            payload : err.response.statusText\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Search log \r\nexport const searchLog = text => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`${process.env.API_URL}/logs/?q=${text}`);\r\n\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_LOGS,\r\n            payload : data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:LOGS_ERROR,\r\n            payload : err.response.statusText\r\n        })\r\n    }\r\n}\r\n\r\n// Set Loading to True\r\nexport const setLoading = () =>{\r\n    return {\r\n        type : SET_LOADING\r\n    }\r\n}\r\n\r\n// Set Current\r\nexport const setCurrent = (log) =>{\r\n    return {\r\n        type : SET_CURRENT,\r\n        payload : log\r\n    }\r\n}\r\n\r\n// Clear Current\r\nexport const clearCurrent = () =>{\r\n    return {\r\n        type : CLEAR_CURRENT\r\n    }\r\n}","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';","import React , {useRef} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {searchLog} from '../../actions/logActions'\r\n\r\nconst SearchBar = ({searchLog}) => {\r\n    const text = useRef('');\r\n\r\n    const onChange = e => {\r\n        searchLog(text.current.value)\r\n    }\r\n    return (\r\n        <nav style={{marginBottom : '30px' , background : 'linear-gradient(125deg, #c82a2a, #1f5be3)'}} >\r\n            <div className=\"nav-wrapper\">\r\n                <form>\r\n                <div className=\"input-field\">\r\n                    <input id=\"search\" type=\"search\" placeholder='Search Logs...' ref={text} onChange={onChange}/>\r\n                    <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n                    <i className=\"material-icons\">close</i>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nSearchBar.prototypes = {\r\n    searchLog : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null,{searchLog})(SearchBar)","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteLog,setCurrent } from '../../actions/logActions'\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({log,deleteLog,setCurrent}) => {\r\n\r\n    const onDelete = () => {\r\n        deleteLog(log.id);\r\n        M.toast({html : `Log Deleted `})\r\n    }\r\n\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n                <a \r\n                href=\"#edit-log-modal\" \r\n                className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`}\r\n                onClick={() => setCurrent(log)}\r\n                >\r\n                    {log.message}\r\n                    </a>\r\n                    <br/>\r\n                    <span className='grey-text'>\r\n                        <span className=\"black-text\">ID #{log.id}</span> Last Updated By \r\n                        <span className=\"black-text\"> {log.tech} </span>\r\n                        on <Moment format='MMMM Do YYYY,h:mm:ss a'>{log.date}</Moment>\r\n                    </span>\r\n                    <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\r\n                        <i className=\"material-icons grey-text\">delete</i>\r\n                    </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nLogItem.propTypes = {\r\n    log : PropTypes.object.isRequired,\r\n    deleteLog : PropTypes.func.isRequired,\r\n    setCurrent : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteLog,setCurrent })(LogItem);\r\n","import React from 'react'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className='progress blue lighten-4'>\r\n            <div className=\"indeterminate blue\">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React , {useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport LogItem from './LogItem'\r\nimport Preloader from '../layout/Preloader'\r\nimport PropTypes from 'prop-types' ;\r\nimport {getLogs} from '../../actions/logActions'\r\n\r\n\r\nconst Logs = ({log : {logs,loading},getLogs}) => {\r\n\r\n    useEffect(() => {\r\n        getLogs();\r\n        // eslint-disable-next-line\r\n    },[]);\r\n \r\n\r\n    if(loading || logs === null){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">System Logs</h4>\r\n            </li>\r\n            {!loading && logs.length === 0 ? (<p className=\"center\">No logs to show...</p>) :  (\r\n                logs.map(log => <LogItem log={log} key={log.id} />)\r\n            )  }\r\n        </ul>\r\n    )\r\n}\r\n\r\nLogs.propTypes = {\r\n    log : PropTypes.object.isRequired,\r\n    getLogs : PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log : state.log\r\n});\r\n\r\nexport default connect(mapStateToProps,{getLogs})(Logs);\r\n","import React from 'react'\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className='fixed-action-btn'>\r\n            <a href=\"#add-log-modal\" className=\"btn-floating btn-large blue darken-2 modal-trigger\">\r\n                <i className=\"large material-icons\">add</i>\r\n            </a>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"#tech-list-modal\" className=\"btn-floating green modal-trigger\">\r\n                        <i className=\"material-icons\">person</i>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\r\n                        <i className=\"material-icons\">person_add</i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBtn\r\n","import { ADD_TECH,GET_TECHS,DELETE_TECH,SET_LOADING,TECHS_ERROR} from './types';\r\n\r\n// Get Techs from Server\r\nexport const getTechs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`${process.env.API_URL}/techs`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_TECHS,\r\n            payload : data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type:TECHS_ERROR,\r\n            payload : err.response.statusText\r\n        })\r\n    }\r\n}\r\n\r\n// Add Tech \r\nexport const addTech = (tech) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`${process.env.API_URL}/techs`,{\r\n            method : 'POST',\r\n            body : JSON.stringify(tech),\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await res.json();\r\n        \r\n        dispatch({\r\n            type: ADD_TECH,\r\n            payload : data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:TECHS_ERROR,\r\n            payload : err.response.statusText\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Delete Tech \r\nexport const deleteTech = id => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`${process.env.API_URL}/techs/${id}`,{\r\n            method : 'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_TECH,\r\n            payload : id\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type:TECHS_ERROR,\r\n            payload : err.response.statusText\r\n        })\r\n    }\r\n}\r\n\r\n// Set Loading to True\r\nexport const setLoading = () =>{\r\n    return {\r\n        type : SET_LOADING\r\n    }\r\n}\r\n\r\n\r\n","import React,{useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getTechs } from '../../actions/techActions'\r\n\r\n\r\nconst TechSelectOptions = ({getTechs,tech: {techs,loading}}) => {\r\n    useEffect(() => {\r\n        getTechs();\r\n         // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n       !loading && techs !== null && techs.map(t =>  \r\n       <option key={t.id} value={`${t.firstName} ${t.lastName}`} > {t.firstName} {t.lastName}</option>\r\n       )\r\n    )\r\n\r\n}\r\n\r\nTechSelectOptions.propTypes = {\r\ntech : PropTypes.object.isRequired,\r\ngetTechs : PropTypes.func.isRequired, \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tech : state.tech\r\n})\r\n\r\nexport default connect(mapStateToProps,{getTechs})(TechSelectOptions)\r\n","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types' ;\r\nimport {addLog} from '../../actions/logActions'\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\n\r\nconst AddLogModal = ({addLog}) => {\r\n\r\n    const [message,setMessage] = useState('');\r\n    const [attention,setAttention] = useState(false);\r\n    const [tech,setTech] = useState('');\r\n    \r\n    const onSubmit = () =>{\r\n        if(message === '' || tech === ''){\r\n            M.toast({html : 'Please enter a message and tech'})\r\n        }\r\n        else{\r\n            const newLog = {\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            }\r\n\r\n            addLog(newLog);\r\n\r\n            M.toast({html : `Log add by ${tech}`})\r\n\r\n            // Clear Fields\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='add-log-modal' className='modal' style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Enter System Log</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='message' value={message} onChange={e => setMessage(e.target.value)}/>\r\n                        <label htmlFor=\"message\" className='active'>Log Message</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"input-field\">\r\n                      <select name=\"tech\" value={tech} className='browser-default' onChange={e => setTech(e.target.value)}>\r\n                        <TechSelectOptions />\r\n                      </select>\r\n                  </div>  \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <p>\r\n                            <label >\r\n                                <input type=\"checkbox\"className='filled-in' checked={attention} value={attention} onChange={e => setAttention(!attention)}/>\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onSubmit} className='modal-close blue waves-effect btn waves-green '>Enter</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst modalStyle = {\r\n    width : '75%',\r\n    height : '75%'\r\n}\r\n\r\nAddLogModal.propTypes = {\r\n    addLog : PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default  connect(null,{addLog})(AddLogModal)\r\n","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport {updateLog} from '../../actions/logActions'\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst EditLogModal = ({updateLog,current}) => {\r\n\r\n    const [message,setMessage] = useState('');\r\n    const [attention,setAttention] = useState(false);\r\n    const [tech,setTech] = useState('');\r\n    \r\n    useEffect(() => {\r\n        if(current){\r\n            setMessage(current.message)\r\n            setAttention(current.attention)\r\n            setTech(current.tech)\r\n        }\r\n    },[current])\r\n    const onSubmit = () =>{\r\n        if(message === '' || tech === ''){\r\n            M.toast({html : 'Please enter a message and tech'})\r\n        }\r\n        else{\r\n\r\n            const setLog = {\r\n                id:current.id,\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            }\r\n\r\n            updateLog(setLog);\r\n\r\n            M.toast({html : `Log Updated ${tech}`})\r\n\r\n            // Clear Fields\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Edit System Log</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='message' value={message} onChange={e => setMessage(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"input-field\">\r\n                      <select name=\"tech\" value={tech} className='browser-default' onChange={e => setTech(e.target.value)}>\r\n                        <TechSelectOptions />\r\n                      </select>\r\n                  </div>  \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <p>\r\n                            <label >\r\n                                <input type=\"checkbox\"className='filled-in' checked={attention} value={attention} onChange={e => setAttention(!attention)}/>\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onSubmit} className='modal-close blue waves-effect btn waves-green '>Update</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst modalStyle = {\r\n    width : '75%',\r\n    height : '75%'\r\n}\r\n\r\nEditLogModal.propTypes = {\r\n    current : PropTypes.object,\r\n    updateLog : PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    current : state.log.current\r\n});\r\n\r\nexport default connect(mapStateToProps,{updateLog})(EditLogModal)\r\n","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types' ;\r\nimport {addTech} from '../../actions/techActions'\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n\r\n    const [firstName,setFirstName] = useState('');\r\n    const [lastName,setLastName] = useState('');\r\n    \r\n    const onSubmit = () =>{\r\n        if(firstName === '' || lastName === ''){\r\n            M.toast({html : 'Please enter the First and Last Name'})\r\n        }\r\n        else{\r\n            const newTech = {\r\n                firstName,\r\n                lastName\r\n            }\r\n\r\n            addTech(newTech);\r\n\r\n            M.toast({html : `${firstName} ${lastName} Was Added as a Tech`})\r\n\r\n            // Clear Fields\r\n            setFirstName('');\r\n            setLastName('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='add-tech-modal' className='modal' >\r\n            <div className=\"modal-content\">\r\n                <h4>New Technician</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='firstName' value={firstName} onChange={e => setFirstName(e.target.value)}/>\r\n                        <label htmlFor=\"firstName\" className='active'>First Name</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='lastName' value={lastName} onChange={e => setLastName(e.target.value)}/>\r\n                        <label htmlFor=\"lastName\" className='active'>Last Name</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onSubmit} className='modal-close blue waves-effect btn waves-green '>Enter</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddTechModal.propTypes = {\r\n    addTech : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default  connect(null,{addTech})(AddTechModal)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteTech } from '../../actions/techActions'\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({tech,deleteTech}) => {\r\n\r\n    const onDelete = () => {\r\n        deleteTech(tech.id);\r\n        M.toast({html : `Techician Deleted `})\r\n    }\r\n\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n                {tech.firstName} {tech.lastName}\r\n                <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\r\n                    <i className=\"material-icons grey-text\">delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nTechItem.propTypes = {\r\n    tech : PropTypes.object.isRequired,\r\n    deleteTech : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteTech})(TechItem);\r\n\r\n","import React , {useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport TechItem from './TechItem'\r\nimport PropTypes from 'prop-types' ;\r\nimport {getTechs} from '../../actions/techActions'\r\n\r\nconst TechListModal = ({getTechs , tech : {techs,loading}}) => {\r\n\r\n    useEffect(() => {\r\n        getTechs();\r\n        // eslint-disable-next-line\r\n    },[]);\r\n\r\n    return (\r\n        <div id=\"tech-list-modal\" className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <h4>Technician List</h4>\r\n                <ul className=\"collection\">\r\n                    {!loading && techs !== null &&\r\n                    techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n                    \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTechListModal.propTypes = {\r\n    tech : PropTypes.object.isRequired,\r\n    getTechs : PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tech : state.tech\r\n});\r\n\r\nexport default  connect(mapStateToProps,{getTechs})(TechListModal);\r\n","import { GET_LOGS,SET_LOADING,LOGS_ERROR,ADD_LOG,DELETE_LOG,SET_CURRENT,CLEAR_CURRENT,UPDATE_LOG,SEARCH_LOGS} from '../actions/types';\r\n\r\nconst initialState = {\r\n    logs : null,\r\n    current : null,\r\n    loading : false ,\r\n    error : null \r\n}\r\n\r\n\r\nexport default (state = initialState,action) => {\r\n    switch(action.type){\r\n        case GET_LOGS : return {\r\n            ...state,\r\n            logs:action.payload,\r\n            loading : false\r\n        };\r\n        case ADD_LOG : return {\r\n            ...state, \r\n            logs:[...state.logs,action.payload],\r\n            loading:false\r\n        };\r\n        case DELETE_LOG : return {\r\n            ...state,\r\n            logs: state.logs.filter(log => log.id !== action.payload),\r\n            loading:false\r\n        };\r\n        case UPDATE_LOG : return {\r\n            ...state,\r\n            logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log),\r\n            loading:false\r\n        };\r\n        case SEARCH_LOGS : return {\r\n            ...state,\r\n            logs: action.payload,\r\n            loading:false\r\n        };\r\n        case SET_LOADING : return {\r\n            ...state,\r\n            loading:true\r\n        };\r\n        case SET_CURRENT : return {\r\n            ...state,\r\n            current:action.payload\r\n        };\r\n        case CLEAR_CURRENT : return {\r\n            ...state,\r\n            current:null\r\n        };\r\n        case LOGS_ERROR :   console.error(action.payload);\r\n        return {\r\n            ...state,\r\n            error:action.payload,\r\n            loading :false\r\n        }\r\n        default : return state ;\r\n    }\r\n}","import {ADD_TECH,GET_TECHS,DELETE_TECH,SET_LOADING,TECHS_ERROR} from '../actions/types';\r\n\r\nconst initialState = {\r\n    techs : null,\r\n    loading : false ,\r\n    error : null \r\n}\r\n\r\nexport default (state = initialState,action) => {\r\n    switch(action.type){\r\n        case GET_TECHS : return {\r\n            ...state,\r\n            techs:action.payload,\r\n            loading : false\r\n        };\r\n        case ADD_TECH : return {\r\n            ...state, \r\n            techs:[...state.techs,action.payload],\r\n            loading:false\r\n        };\r\n        case DELETE_TECH : return {\r\n            ...state,\r\n            techs: state.techs.filter(tech => tech.id !== action.payload),\r\n            loading:false\r\n        };\r\n        case SET_LOADING : return {\r\n            ...state,\r\n            loading:true\r\n        };\r\n        case TECHS_ERROR :   \r\n        console.error(action.payload);\r\n        return {\r\n            ...state,\r\n            error:action.payload,\r\n            loading :false\r\n        }\r\n        default : return state ;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport logReducer from './logReducer' ;\r\nimport techReducer from './techReducer' ;\r\n\r\nexport default combineReducers({\r\n    log : logReducer,\r\n    tech : techReducer\r\n});","import {createStore,applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(...middleware),\r\n  )\r\n);\r\n\r\nexport default store;","import React,{useEffect} from 'react';\nimport SearchBar from './components/layout/SearchBar'\nimport Logs from './components/logs/Logs'\nimport AddBtn from './components/layout/AddBtn'\nimport AddLogModal from './components/logs/AddLogModal'\nimport EditLogModal from './components/logs/EditLogModal'\nimport AddTechModal from './components/techs/AddTechModal'\nimport TechListModal from './components/techs/TechListModal'\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport 'materialize-css/dist/css/materialize.min.css' ; \nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n\n  useEffect(()=>{\n    // Init Materialize JS\n    M.AutoInit();\n  });\n  \n  return (\n    <Provider store={store}>\n      <SearchBar />\n      <div className=\"container\">\n        <AddBtn />\n        <AddLogModal />\n        <EditLogModal />\n        <AddTechModal />\n        <TechListModal />\n\n        <Logs />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}