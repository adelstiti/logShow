{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","SearchBar","searchLog","text","useRef","style","marginBottom","background","className","id","placeholder","ref","onChange","e","current","value","htmlFor","prototypes","PropTypes","func","isRequired","connect","dispatch","a","fetch","res","json","data","payload","response","statusText","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","checked","newLog","Date","updateLog","setLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5f09a45.chunk.js","sourcesContent":["import { GET_LOGS,SET_LOADING,\n    LOGS_ERROR,ADD_LOG,DELETE_LOG\n    ,SET_CURRENT,CLEAR_CURRENT,\n    UPDATE_LOG,SEARCH_LOGS} from './types';\n\n// export const getLogs = () => {\n//     return async (dispatch) => {\n//         setLoading();\n\n//         const res = await fetch('/logs');\n//         const data = await res.json();\n\n//         dispatch({\n//             type: GET_LOGS,\n//             payload : data\n//         });\n//     }\n// }\n\n\n// Get Logs from Server\nexport const getLogs = () => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/logs');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_LOGS,\n            payload : data\n        });\n\n    } catch (err) {\n        dispatch({\n            type:LOGS_ERROR,\n            payload : err.response.statusText\n        })\n    }\n}\n\n\n\n// Add log \nexport const addLog = (log) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/logs',{\n            method : 'POST',\n            body : JSON.stringify(log),\n            headers : {\n                'Content-Type' : 'application/json'\n            }\n        });\n\n        const data = await res.json();\n        dispatch({\n            type: ADD_LOG,\n            payload : data\n        });\n\n    } catch (err) {\n        dispatch({\n            type:LOGS_ERROR,\n            payload : err.response.statusText\n        })\n    }\n}\n\n\n\n// Delete log \nexport const deleteLog = id => async dispatch => {\n    try {\n        setLoading();\n\n        await fetch(`/logs/${id}`,{\n            method : 'DELETE'\n        });\n\n        dispatch({\n            type: DELETE_LOG,\n            payload : id\n        });\n\n    } catch (err) {\n        dispatch({\n            type:LOGS_ERROR,\n            payload : err.response.statusText\n        })\n    }\n}\n\n// Update log \nexport const updateLog = log => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch(`/logs/${log.id}`,{\n            method : 'PUT',\n            body : JSON.stringify(log),\n            headers : {\n                'Content-Type' : 'application/json'\n            }\n        });\n\n        const data = await res.json();\n\n        dispatch({\n            type: UPDATE_LOG,\n            payload : data\n        });\n\n    } catch (err) {\n        dispatch({\n            type:LOGS_ERROR,\n            payload : err.response.statusText\n        })\n    }\n}\n\n\n// Search log \nexport const searchLog = text => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch(`/logs/?q=${text}`);\n\n        const data = await res.json();\n\n        dispatch({\n            type: SEARCH_LOGS,\n            payload : data\n        });\n\n    } catch (err) {\n        dispatch({\n            type:LOGS_ERROR,\n            payload : err.response.statusText\n        })\n    }\n}\n\n// Set Loading to True\nexport const setLoading = () =>{\n    return {\n        type : SET_LOADING\n    }\n}\n\n// Set Current\nexport const setCurrent = (log) =>{\n    return {\n        type : SET_CURRENT,\n        payload : log\n    }\n}\n\n// Clear Current\nexport const clearCurrent = () =>{\n    return {\n        type : CLEAR_CURRENT\n    }\n}","export const GET_LOGS = 'GET_LOGS';\nexport const ADD_LOG = 'ADD_LOG';\nexport const DELETE_LOG = 'DELETE_LOG';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const LOGS_ERROR = 'LOGS_ERROR';\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\nexport const GET_TECHS = 'GET_TECHS';\nexport const ADD_TECH = 'ADD_TECH';\nexport const DELETE_TECH = 'DELETE_TECH';\nexport const TECHS_ERROR = 'TECHS_ERROR';","import React , {useRef} from 'react'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {searchLog} from '../../actions/logActions'\n\nconst SearchBar = ({searchLog}) => {\n    const text = useRef('');\n\n    const onChange = e => {\n        searchLog(text.current.value)\n    }\n    return (\n        <nav style={{marginBottom : '30px' , background : 'linear-gradient(125deg, #c82a2a, #1f5be3)'}} >\n            <div className=\"nav-wrapper\">\n                <form>\n                <div className=\"input-field\">\n                    <input id=\"search\" type=\"search\" placeholder='Search Logs...' ref={text} onChange={onChange}/>\n                    <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\n                    <i className=\"material-icons\">close</i>\n                </div>\n                </form>\n            </div>\n        </nav>\n    );\n};\nSearchBar.prototypes = {\n    searchLog : PropTypes.func.isRequired,\n}\n\nexport default connect(null,{searchLog})(SearchBar)","import React from 'react'\nimport Moment from 'react-moment'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { deleteLog,setCurrent } from '../../actions/logActions'\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst LogItem = ({log,deleteLog,setCurrent}) => {\n\n    const onDelete = () => {\n        deleteLog(log.id);\n        M.toast({html : `Log Deleted `})\n    }\n\n    return (\n        <li className=\"collection-item\">\n            <div>\n                <a \n                href=\"#edit-log-modal\" \n                className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`}\n                onClick={() => setCurrent(log)}\n                >\n                    {log.message}\n                    </a>\n                    <br/>\n                    <span className='grey-text'>\n                        <span className=\"black-text\">ID #{log.id}</span> Last Updated By \n                        <span className=\"black-text\"> {log.tech} </span>\n                        on <Moment format='MMMM Do YYYY,h:mm:ss a'>{log.date}</Moment>\n                    </span>\n                    <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\n                        <i className=\"material-icons grey-text\">delete</i>\n                    </a>\n            </div>\n        </li>\n    )\n}\n\nLogItem.propTypes = {\n    log : PropTypes.object.isRequired,\n    deleteLog : PropTypes.func.isRequired,\n    setCurrent : PropTypes.func.isRequired\n}\n\nexport default connect(null, { deleteLog,setCurrent })(LogItem);\n","import React from 'react'\n\nconst Preloader = () => {\n    return (\n        <div className='progress blue lighten-4'>\n            <div className=\"indeterminate blue\">\n\n            </div>\n        </div>\n    )\n}\n\nexport default Preloader\n","import React , {useEffect} from 'react'\nimport {connect} from 'react-redux';\nimport LogItem from './LogItem'\nimport Preloader from '../layout/Preloader'\nimport PropTypes from 'prop-types' ;\nimport {getLogs} from '../../actions/logActions'\n\n\nconst Logs = ({log : {logs,loading},getLogs}) => {\n\n    useEffect(() => {\n        getLogs();\n        // eslint-disable-next-line\n    },[]);\n \n\n    if(loading || logs === null){\n        return <Preloader/>\n    }\n\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className=\"center\">System Logs</h4>\n            </li>\n            {!loading && logs.length === 0 ? (<p className=\"center\">No logs to show...</p>) :  (\n                logs.map(log => <LogItem log={log} key={log.id} />)\n            )  }\n        </ul>\n    )\n}\n\nLogs.propTypes = {\n    log : PropTypes.object.isRequired,\n    getLogs : PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    log : state.log\n});\n\nexport default connect(mapStateToProps,{getLogs})(Logs);\n","import React from 'react'\n\nconst AddBtn = () => {\n    return (\n        <div className='fixed-action-btn'>\n            <a href=\"#add-log-modal\" className=\"btn-floating btn-large blue darken-2 modal-trigger\">\n                <i className=\"large material-icons\">add</i>\n            </a>\n            <ul>\n                <li>\n                    <a href=\"#tech-list-modal\" className=\"btn-floating green modal-trigger\">\n                        <i className=\"material-icons\">person</i>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\n                        <i className=\"material-icons\">person_add</i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default AddBtn\n","import { ADD_TECH,GET_TECHS,DELETE_TECH,SET_LOADING,TECHS_ERROR} from './types';\n\n// Get Techs from Server\nexport const getTechs = () => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/techs');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_TECHS,\n            payload : data\n        });\n    } catch (err) {\n        dispatch({\n            type:TECHS_ERROR,\n            payload : err.response.statusText\n        })\n    }\n}\n\n// Add Tech \nexport const addTech = (tech) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/techs',{\n            method : 'POST',\n            body : JSON.stringify(tech),\n            headers : {\n                'Content-Type' : 'application/json'\n            }\n        });\n\n        const data = await res.json();\n        \n        dispatch({\n            type: ADD_TECH,\n            payload : data\n        });\n\n    } catch (err) {\n        dispatch({\n            type:TECHS_ERROR,\n            payload : err.response.statusText\n        })\n    }\n}\n\n\n// Delete Tech \nexport const deleteTech = id => async dispatch => {\n    try {\n        setLoading();\n\n        await fetch(`/techs/${id}`,{\n            method : 'DELETE'\n        });\n\n        dispatch({\n            type: DELETE_TECH,\n            payload : id\n        });\n\n    } catch (err) {\n        dispatch({\n            type:TECHS_ERROR,\n            payload : err.response.statusText\n        })\n    }\n}\n\n// Set Loading to True\nexport const setLoading = () =>{\n    return {\n        type : SET_LOADING\n    }\n}\n\n\n","import React,{useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { getTechs } from '../../actions/techActions'\n\n\nconst TechSelectOptions = ({getTechs,tech: {techs,loading}}) => {\n    useEffect(() => {\n        getTechs();\n         // eslint-disable-next-line\n    }, [])\n\n    return (\n       !loading && techs !== null && techs.map(t =>  \n       <option key={t.id} value={`${t.firstName} ${t.lastName}`} > {t.firstName} {t.lastName}</option>\n       )\n    )\n\n}\n\nTechSelectOptions.propTypes = {\ntech : PropTypes.object.isRequired,\ngetTechs : PropTypes.func.isRequired, \n}\n\nconst mapStateToProps = state => ({\n    tech : state.tech\n})\n\nexport default connect(mapStateToProps,{getTechs})(TechSelectOptions)\n","import React,{useState} from 'react'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types' ;\nimport {addLog} from '../../actions/logActions'\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport TechSelectOptions from '../techs/TechSelectOptions';\n\nconst AddLogModal = ({addLog}) => {\n\n    const [message,setMessage] = useState('');\n    const [attention,setAttention] = useState(false);\n    const [tech,setTech] = useState('');\n    \n    const onSubmit = () =>{\n        if(message === '' || tech === ''){\n            M.toast({html : 'Please enter a message and tech'})\n        }\n        else{\n            const newLog = {\n                message,\n                attention,\n                tech,\n                date: new Date()\n            }\n\n            addLog(newLog);\n\n            M.toast({html : `Log add by ${tech}`})\n\n            // Clear Fields\n            setMessage('');\n            setTech('');\n            setAttention(false);\n        }\n    }\n\n    return (\n        <div id='add-log-modal' className='modal' style={modalStyle}>\n            <div className=\"modal-content\">\n                <h4>Enter System Log</h4>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name='message' value={message} onChange={e => setMessage(e.target.value)}/>\n                        <label htmlFor=\"message\" className='active'>Log Message</label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"input-field\">\n                      <select name=\"tech\" value={tech} className='browser-default' onChange={e => setTech(e.target.value)}>\n                        <TechSelectOptions />\n                      </select>\n                  </div>  \n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <p>\n                            <label >\n                                <input type=\"checkbox\"className='filled-in' checked={attention} value={attention} onChange={e => setAttention(!attention)}/>\n                                <span>Needs Attention</span>\n                            </label>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#!\" onClick={onSubmit} className='modal-close blue waves-effect btn waves-green '>Enter</a>\n            </div>\n        </div>\n    )\n}\n\nconst modalStyle = {\n    width : '75%',\n    height : '75%'\n}\n\nAddLogModal.propTypes = {\n    addLog : PropTypes.func.isRequired,\n}\n\n\nexport default  connect(null,{addLog})(AddLogModal)\n","import React,{useState,useEffect} from 'react'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types'\nimport {updateLog} from '../../actions/logActions'\nimport TechSelectOptions from '../techs/TechSelectOptions';\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst EditLogModal = ({updateLog,current}) => {\n\n    const [message,setMessage] = useState('');\n    const [attention,setAttention] = useState(false);\n    const [tech,setTech] = useState('');\n    \n    useEffect(() => {\n        if(current){\n            setMessage(current.message)\n            setAttention(current.attention)\n            setTech(current.tech)\n        }\n    },[current])\n    const onSubmit = () =>{\n        if(message === '' || tech === ''){\n            M.toast({html : 'Please enter a message and tech'})\n        }\n        else{\n\n            const setLog = {\n                id:current.id,\n                message,\n                attention,\n                tech,\n                date: new Date()\n            }\n\n            updateLog(setLog);\n\n            M.toast({html : `Log Updated ${tech}`})\n\n            // Clear Fields\n            setMessage('');\n            setTech('');\n            setAttention(false);\n\n        }\n    }\n\n    return (\n        <div id='edit-log-modal' className='modal' style={modalStyle}>\n            <div className=\"modal-content\">\n                <h4>Edit System Log</h4>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name='message' value={message} onChange={e => setMessage(e.target.value)}/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"input-field\">\n                      <select name=\"tech\" value={tech} className='browser-default' onChange={e => setTech(e.target.value)}>\n                        <TechSelectOptions />\n                      </select>\n                  </div>  \n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <p>\n                            <label >\n                                <input type=\"checkbox\"className='filled-in' checked={attention} value={attention} onChange={e => setAttention(!attention)}/>\n                                <span>Needs Attention</span>\n                            </label>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#!\" onClick={onSubmit} className='modal-close blue waves-effect btn waves-green '>Update</a>\n            </div>\n        </div>\n    )\n}\n\n\nconst modalStyle = {\n    width : '75%',\n    height : '75%'\n}\n\nEditLogModal.propTypes = {\n    current : PropTypes.object,\n    updateLog : PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    current : state.log.current\n});\n\nexport default connect(mapStateToProps,{updateLog})(EditLogModal)\n","import React,{useState} from 'react'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types' ;\nimport {addTech} from '../../actions/techActions'\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddTechModal = ({ addTech }) => {\n\n    const [firstName,setFirstName] = useState('');\n    const [lastName,setLastName] = useState('');\n    \n    const onSubmit = () =>{\n        if(firstName === '' || lastName === ''){\n            M.toast({html : 'Please enter the First and Last Name'})\n        }\n        else{\n            const newTech = {\n                firstName,\n                lastName\n            }\n\n            addTech(newTech);\n\n            M.toast({html : `${firstName} ${lastName} Was Added as a Tech`})\n\n            // Clear Fields\n            setFirstName('');\n            setLastName('');\n        }\n    }\n\n    return (\n        <div id='add-tech-modal' className='modal' >\n            <div className=\"modal-content\">\n                <h4>New Technician</h4>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name='firstName' value={firstName} onChange={e => setFirstName(e.target.value)}/>\n                        <label htmlFor=\"firstName\" className='active'>First Name</label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name='lastName' value={lastName} onChange={e => setLastName(e.target.value)}/>\n                        <label htmlFor=\"lastName\" className='active'>Last Name</label>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#!\" onClick={onSubmit} className='modal-close blue waves-effect btn waves-green '>Enter</a>\n            </div>\n        </div>\n    )\n}\n\nAddTechModal.propTypes = {\n    addTech : PropTypes.func.isRequired,\n}\n\nexport default  connect(null,{addTech})(AddTechModal)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { deleteTech } from '../../actions/techActions'\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst TechItem = ({tech,deleteTech}) => {\n\n    const onDelete = () => {\n        deleteTech(tech.id);\n        M.toast({html : `Techician Deleted `})\n    }\n\n    return (\n        <li className=\"collection-item\">\n            <div>\n                {tech.firstName} {tech.lastName}\n                <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\n                    <i className=\"material-icons grey-text\">delete</i>\n                </a>\n            </div>\n        </li>\n    )\n}\n\n\nTechItem.propTypes = {\n    tech : PropTypes.object.isRequired,\n    deleteTech : PropTypes.func.isRequired,\n}\n\nexport default connect(null, {deleteTech})(TechItem);\n\n","import React , {useEffect} from 'react'\nimport {connect} from 'react-redux';\nimport TechItem from './TechItem'\nimport PropTypes from 'prop-types' ;\nimport {getTechs} from '../../actions/techActions'\n\nconst TechListModal = ({getTechs , tech : {techs,loading}}) => {\n\n    useEffect(() => {\n        getTechs();\n        // eslint-disable-next-line\n    },[]);\n\n    return (\n        <div id=\"tech-list-modal\" className=\"modal\">\n            <div className=\"modal-content\">\n                <h4>Technician List</h4>\n                <ul className=\"collection\">\n                    {!loading && techs !== null &&\n                    techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\n                    \n                </ul>\n            </div>\n        </div>\n    )\n}\n\n\nTechListModal.propTypes = {\n    tech : PropTypes.object.isRequired,\n    getTechs : PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    tech : state.tech\n});\n\nexport default  connect(mapStateToProps,{getTechs})(TechListModal);\n","import { GET_LOGS,SET_LOADING,LOGS_ERROR,ADD_LOG,DELETE_LOG,SET_CURRENT,CLEAR_CURRENT,UPDATE_LOG,SEARCH_LOGS} from '../actions/types';\n\nconst initialState = {\n    logs : null,\n    current : null,\n    loading : false ,\n    error : null \n}\n\n\nexport default (state = initialState,action) => {\n    switch(action.type){\n        case GET_LOGS : return {\n            ...state,\n            logs:action.payload,\n            loading : false\n        };\n        case ADD_LOG : return {\n            ...state, \n            logs:[...state.logs,action.payload],\n            loading:false\n        };\n        case DELETE_LOG : return {\n            ...state,\n            logs: state.logs.filter(log => log.id !== action.payload),\n            loading:false\n        };\n        case UPDATE_LOG : return {\n            ...state,\n            logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log),\n            loading:false\n        };\n        case SEARCH_LOGS : return {\n            ...state,\n            logs: action.payload,\n            loading:false\n        };\n        case SET_LOADING : return {\n            ...state,\n            loading:true\n        };\n        case SET_CURRENT : return {\n            ...state,\n            current:action.payload\n        };\n        case CLEAR_CURRENT : return {\n            ...state,\n            current:null\n        };\n        case LOGS_ERROR :   console.error(action.payload);\n        return {\n            ...state,\n            error:action.payload,\n            loading :false\n        }\n        default : return state ;\n    }\n}","import {ADD_TECH,GET_TECHS,DELETE_TECH,SET_LOADING,TECHS_ERROR} from '../actions/types';\n\nconst initialState = {\n    techs : null,\n    loading : false ,\n    error : null \n}\n\nexport default (state = initialState,action) => {\n    switch(action.type){\n        case GET_TECHS : return {\n            ...state,\n            techs:action.payload,\n            loading : false\n        };\n        case ADD_TECH : return {\n            ...state, \n            techs:[...state.techs,action.payload],\n            loading:false\n        };\n        case DELETE_TECH : return {\n            ...state,\n            techs: state.techs.filter(tech => tech.id !== action.payload),\n            loading:false\n        };\n        case SET_LOADING : return {\n            ...state,\n            loading:true\n        };\n        case TECHS_ERROR :   \n        console.error(action.payload);\n        return {\n            ...state,\n            error:action.payload,\n            loading :false\n        }\n        default : return state ;\n    }\n}","import {combineReducers} from 'redux';\nimport logReducer from './logReducer' ;\nimport techReducer from './techReducer' ;\n\nexport default combineReducers({\n    log : logReducer,\n    tech : techReducer\n});","import {createStore,applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  )\n);\n\nexport default store;","import React,{useEffect} from 'react';\nimport SearchBar from './components/layout/SearchBar'\nimport Logs from './components/logs/Logs'\nimport AddBtn from './components/layout/AddBtn'\nimport AddLogModal from './components/logs/AddLogModal'\nimport EditLogModal from './components/logs/EditLogModal'\nimport AddTechModal from './components/techs/AddTechModal'\nimport TechListModal from './components/techs/TechListModal'\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport 'materialize-css/dist/css/materialize.min.css' ; \nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n\n  useEffect(()=>{\n    // Init Materialize JS\n    M.AutoInit();\n  });\n  \n  return (\n    <Provider store={store}>\n      <SearchBar />\n      <div className=\"container\">\n        <AddBtn />\n        <AddLogModal />\n        <EditLogModal />\n        <AddTechModal />\n        <TechListModal />\n\n        <Logs />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}